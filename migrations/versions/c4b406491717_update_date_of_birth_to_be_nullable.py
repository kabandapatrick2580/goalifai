"""update date of birth to be nullable

Revision ID: c4b406491717
Revises: 8ac248aa7981
Create Date: 2025-08-28 20:10:19.006524

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c4b406491717'
down_revision = '8ac248aa7981'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('categories_type', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['type_id'])

    with op.batch_alter_table('degrees', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['degree_id'])

    with op.batch_alter_table('education', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['education_id'])

    with op.batch_alter_table('employment_statuses', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['status_id'])

    with op.batch_alter_table('financial_records', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['record_id'])

    with op.batch_alter_table('goal_priorities', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['priority_id'])

    with op.batch_alter_table('goal_statuses', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['status_id'])

    with op.batch_alter_table('transaction_categories', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['category_id'])

    with op.batch_alter_table('user_financial_profiles', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('date_of_birth',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('date_of_birth',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('user_financial_profiles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('transaction_categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('goal_statuses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('goal_priorities', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('financial_records', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('employment_statuses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('education', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('degrees', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('categories_type', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
