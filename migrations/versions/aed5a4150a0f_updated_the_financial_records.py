"""updated the financial records

Revision ID: aed5a4150a0f
Revises: ab28ca082d6c
Create Date: 2025-10-01 08:43:48.366657

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aed5a4150a0f'
down_revision = 'ab28ca082d6c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('financial_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.UUID(), nullable=True))
        batch_op.add_column(sa.Column('expected_transaction', sa.Boolean(), nullable=False))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'currencies', ['currency'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('financial_records', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_column('expected_transaction')
        batch_op.drop_column('currency')

    # ### end Alembic commands ###