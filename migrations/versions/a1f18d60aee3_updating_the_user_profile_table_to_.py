"""updating the user profile table to include the actual data and the logic to use expected values when actual values are not there

Revision ID: a1f18d60aee3
Revises: 024cbcc0354d
Create Date: 2025-03-26 08:14:51.122184

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a1f18d60aee3'
down_revision = '024cbcc0354d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    """
    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.alter_column('priority',
               existing_type=postgresql.ENUM('High', 'Medium', 'Low', name='priority'),
               type_=sa.Enum('High', 'Medium', 'Low', name='goal_priority'),
               existing_nullable=False,
               existing_server_default=sa.text("'Medium'::priority"))"
    

    with op.batch_alter_table('user_financial_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('actual_monthly_income', sa.Numeric(precision=12, scale=2), nullable=True))
        batch_op.add_column(sa.Column('actual_monthly_expenses', sa.Numeric(precision=12, scale=2), nullable=True))
        batch_op.create_unique_constraint(None, ['id'])
        batch_op.drop_column('expected_monthly_savings')
    """
    pass
    # ### end Alembic commands ###


def downgrade():
    """
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_financial_profiles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expected_monthly_savings', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('actual_monthly_expenses')
        batch_op.drop_column('actual_monthly_income')

    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.alter_column('priority',
               existing_type=sa.Enum('High', 'Medium', 'Low', name='goal_priority'),
               type_=postgresql.ENUM('High', 'Medium', 'Low', name='priority'),
               existing_nullable=False,
               existing_server_default=sa.text("'Medium'::priority"))

    # ### end Alembic commands ###
    """
    pass